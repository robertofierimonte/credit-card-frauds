name: Get current time
description: Create timestamp for filtering the data in the pipelines.
inputs:
- name: timestamp
  type: String
  description: |-
    Timestamp in ISO 6801 format.
    Defaults to None.
  optional: true
- name: format_str
  type: String
  description: |-
    Formatting string for the output,
    must be compatible with datetime. Defaults to None.
  optional: true
- name: subtract_days
  type: Integer
  description: |-
    Number of days to subtract from the
    current timestamp. Only used if `timestamp` is None. Defaults to 0.
  default: '0'
  optional: true
outputs:
- {name: Output, type: String}
implementation:
  container:
    image: python:3.9
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'loguru==0.6.0' 'kfp==1.8.22' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def get_current_time(
          timestamp: Optional[str] = None,
          format_str: Optional[str] = None,
          subtract_days: int = 0,
      ) -> str:
          """Create timestamp for filtering the data in the pipelines.

          If `timestamp` is empty, return the current time (UTC+0) in ISO 6801 format.
          Otherwise, return the formatted `timestamp`. If `timestamp` is provided, it
          must follow ISO 6801 format (e.g. 2023-05-21T19:00:00). The date part is
          mandatory while any missing part in the time part will be regarded as zero.

          Args:
              timestamp (Optional[str], optional): Timestamp in ISO 6801 format.
                  Defaults to None.
              format_str (Optional[str], optional): Formatting string for the output,
                  must be compatible with datetime. Defaults to None.
              subtract_days (int, optional): Number of days to subtract from the
                  current timestamp. Only used if `timestamp` is None. Defaults to 0.

          Returns:
              str: Formatted input timestamp is ISO 6801 format
          """
          from datetime import datetime, timedelta, timezone

          from loguru import logger

          if not timestamp:
              dt = datetime.now(timezone.utc) - timedelta(days=subtract_days)

              if not format_str:
                  return dt.isoformat()
              else:
                  return dt.strftime(format=format_str)

          else:
              try:
                  dt = datetime.fromisoformat(timestamp)
                  logger.info(f"Timestamp in ISO 8601 format: {dt}.")
                  if not format_str:
                      return dt.isoformat()
                  else:
                      return dt.strftime(format=format_str)
              except ValueError:
                  err = "Timestamp is not in the correct ISO 6801 format "
                  logger.error(err)
                  raise ValueError(err)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - get_current_time
