name: Train model
description: Train a DecisionTreeClassifier model on the training data.
inputs:
- {name: training_data, type: Dataset, description: Training data as a KFP Dataset
    object.}
- {name: target_column, type: String, description: Column containing the target column
    for classification.}
- {name: model_params, type: JsonObject, description: Parameters of the model.}
- {name: model_file_name, type: String, description: Name of the files where to save
    the serialised model.}
outputs:
- name: model
  type: Model
  description: |-
    Output model as a KFP Model object, this parameter
    will be passed automatically by the orchestrator. The .path
    attribute is the location of the joblib file in GCS.
implementation:
  container:
    image: python:3.9
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'loguru==0.7.0' 'scikit-learn==1.1.2' 'pandas==1.4.3' 'joblib==1.2.0' 'kfp==1.8.22' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def train_model(
          training_data: Input[Dataset],
          target_column: str,
          model_params: dict,
          model_file_name: str,
          model: Output[Model],
      ) -> None:
          """Train a DecisionTreeClassifier model on the training data.

          Args:
              training_data (Input[Dataset]): Training data as a KFP Dataset object.
              target_column (str): Column containing the target column for classification.
              model_params (dict): Parameters of the model.
              model_file_name (str): Name of the files where to save the serialised model.
              model (Output[Model]): Output model as a KFP Model object, this parameter
                  will be passed automatically by the orchestrator. The .path
                  attribute is the location of the joblib file in GCS.
          """
          import os
          from pathlib import Path

          import joblib
          import pandas as pd
          from loguru import logger
          from sklearn.tree import DecisionTreeClassifier

          df_train = pd.read_csv(training_data.path)
          y = df_train.pop(target_column)

          dtc = DecisionTreeClassifier(**model_params)
          dtc.fit(X=df_train, y=y)

          model.path = model.path + f"/{model_file_name}"
          model_dir = Path(model.path).parent.absolute()
          os.makedirs(model_dir, exist_ok=True)

          logger.info(f"Saving model to {model.path}.")
          joblib.dump(dtc, model.path)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - train_model
